# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms (Debug)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install cmake, clang, ninja
        run: |
          sudo apt-get update
          sudo apt-get install cmake clang-18 clang-tools-18 ninja-build
          sudo apt-get install xorg-dev python3 python3-jinja2
      - name: Configure CMake
        run: >
          cmake --preset=debug
          -DCMAKE_CXX_COMPILER=clang++
          -DCMAKE_C_COMPILER=clang
          -S ${{ github.workspace }}
      - name: Build project
        run: cmake --build "${{ github.workspace }}/.build/debug" -v
  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Install cmake, clang, ninja
  #       run: |
  #         brew install cmake
  #         brew install llvm
  #         brew install ninja
  #         export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
  #         # export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
  #         # export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
  #     - name: Configure CMake
  #       run: >
  #         cmake --preset=debug
  #         -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm/bin/clang++
  #         -DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm/bin/clang
  #         -DCMAKE_EXE_LINKER_FLAGS="-L/opt/homebrew/opt/llvm/lib"
  #         -DCMAKE_CXX_FLAGS="-I/opt/homebrew/opt/llvm/include"
  #         -S ${{ github.workspace }}
  #     - name: Build project
  #       run: cmake --build "${{ github.workspace }}/build/debug" -v
  # build-windows:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Install cmake, clang, ninja
  #       run: |
  #         choco install cmake
  #         choco install llvm
  #         choco install ninja
  #     - name: Configure CMake
  #       run: >
  #         cmake --preset=debug
  #         -DCMAKE_CXX_COMPILER=clang++
  #         -DCMAKE_C_COMPILER=clang
  #         -S ${{ github.workspace }}
  #     - name: Build project
  #       run: cmake --build "${{ github.workspace }}/build/debug" -v --config Debug
